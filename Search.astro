<div class="container initial">
   
    <form>
      <input type="text" placeholder="Search Your Recipe...">
      <ion-icon name="search"></ion-icon>
    </form>
    <div class="search-result">
      <div class="item">
        <img src="./img-1.jpg" alt="">
        <div class="flex-container">
          <h1 class="title">This is a recipe item</h1>
          <a class="view-btn" href="#">View Recipe</a>
        </div>
        <p class="item-data">Calories: 120</p>
      </div> 
    </div>
  </div>

  <style>
    *{
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
img{
  width: 100%;
  height: 100%;
  object-fit: cover;
}

h1{
    font-size: medium;
    font-style: italic ;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    text-shadow: grey 20px;
}



html{
  font-family: 'Nunito';
  font-size: 12px;
}

section{
  min-height: 100vh;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 100px 0;
  background-image: url("background.jpg");
  background-size: cover;
  background-position:  center center;

}
.container{
  width: 100%;
  height: 90%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}
.brand{
  text-align: center;
  font-size: 4rem;
  color: whitesmoke;
  margin-bottom: 30px;
}
form{
  width: 90%;
  max-width: 400px;
  margin: 20px auto;
  background-color: rgb(223, 223, 223);
}
input{
  width: 90%;
  padding: 10px;
  border-radius: 4px;
  border: none;
  outline: none;
  font-size: 2rem;
  background-color: rgb(223, 223, 223);
  display: inline-block;
}
form ion-icon{
  width: 8%;
  font-size: 3rem;
  margin-bottom: -8px;
  color: rgb(75, 75, 75) ;
  display: inline-block;
}
.search-result{
  margin-top: 50px;
  width: 100%;
  display: grid;
  grid-gap: 25px;
  grid-template: auto / repeat(auto-fit, minmax(300px, 1fr));
}
.item{
  width: 100%;
  border-radius: 8px;
  background-color: rgb(37, 37, 37);
  padding: 15px;
  overflow: hidden;
}
.item img{
  width: 100%;
  height: 300px;
  border-radius: 4px ;
}
.flex-container{
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.search-result .title{
  color: whitesmoke;
  margin: 20px 10px 0 0;
  font-size: 1.8rem;
  font-weight: 400;
}
.view-btn{
  text-decoration: none;
  text-align: center;
  width: 130px;
  padding: 10px 0;
  background-color: #404041;
  color: whitesmoke;
  font-size: 1.4rem;
  font-weight: 600;
  margin-top: 20px;
  border-radius: 4px;
  align-self:flex-start;
}
.item-data{
  color: whitesmoke;
  display: block;
  margin-top: 10px ;
  font-size: 1.4rem;
  letter-spacing: .05rem;
  line-height: 2rem;
}
.container.initial .brand{
  font-size: 7rem;
}
.container.initial form {
  max-width: 800px;
}
.container.initial form input{
  padding: 20px;
  font-size: 3rem;
}

@media (max-width: 768px){
  .search-result{
    grid-gap:10px
  }
  .container.initial .brand{
    font-size: 4rem;
  }
  .container.initial form {
    max-width: 500px;
  }
  .container.initial form input{
    padding: 10px;
    font-size: 2rem;
  }
}

</style>

<script>
    const searchForm = document.querySelector('form');
const searchResultDiv = document.querySelector('.search-result');
const container = document.querySelector('.container');
let searchQuery = '';
const APP_ID = 'b76e94f6';
const APP_key = '7d0534d2aed897b1b1f611c207b688ee';
// console.log(container)
searchForm.addEventListener('submit', (e) => {
  e.preventDefault();
  searchQuery = e.target.querySelector('input').value;
  fetchAPI();
})

async function fetchAPI(){
  const baseURL = `https://api.edamam.com/search?q=${searchQuery}&app_id=0f2e57c3&app_key=1937ab4eabe9961b2d21cddbbefbcd74&from=0&to=20`;
  const response = await fetch(baseURL); 
  const data = await response.json();
  generateHTML(data.hits)
  console.log(data);
}

function generateHTML(results){
  container.classList.remove('initial');
  let generatedHTML= '';
  results.map(result => {
    generatedHTML += `
      <div class="item">
        <img src="${result.recipe.image}" alt="img">
        <div class="flex-container">
          <h1 class="title">${result.recipe.label}</h1>
          <a class="view-btn" target="_blank" href="${result.recipe.url}">View Recipe</a>
        </div>
        <p class="item-data">Calories: ${result.recipe.calories.toFixed(2)}</p>
        <p class="item-data">Diet label: ${result.recipe.dietLabels.length > 0 ? result.recipe.dietLabels : 'No Data Found'}</p>
        <p class="item-data">Health labels: ${result.recipe.healthLabels}</p>
      </div>
    `
  })
  searchResultDiv.innerHTML = generatedHTML;
}

</script>